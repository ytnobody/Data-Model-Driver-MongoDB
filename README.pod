
=begin html 

<p><img src="https://travis-ci.org/ytnobody/Data-Model-Driver-MongoDB.png?branch=master" /></p>

=end html

=head1 NAME

Data::Model::Driver::MongoDB - storage driver of Data::Model for MongoDB

=head1 SYNOPSIS

  ### your schema class
  package Oreore::Schema;
  use parent qw/ Data::Model /;
  use Data::Model::Schema;
  
  install_model book => schema {
      key 'id';
      columns qw/ id name author price genre note /;
  };
  
  1;

  ### and use it
  use Oreore::Schema;
  use Data::Model::Driver::MongoDB;
  
  my $mongo_db = Data::Model::Driver::MongoDB->new( 
      host => 'localhost',
      port => 25252,
      db => 'my_database',
  );
  
  my $schema = Oreore::Schema->new;
  $schema->set_base_driver( $mongo_db );

  my $devils_dict = $schema->set( book => { 
      name => "Devil's dictionary",
      author => "Ambrose Bierce",
      price => 700, # <- 700 yen
      genre => "essay",
      note => "Virtuoso of short-story who called reincarnation of Poe were represent modern-civilization by edgy satire and biting irony.",
  } );

  my $id = $devils_dict->id;
  
  my $book = $schema->lookup( book => $id );
  
  my $iter = $schema->get( book => { where => [ genre => 'novel' ] } );
  while ( $book = $iter->next ) {
      print $book->name." / price:". $book->price. "\n";
  }

=head1 DESCRIPTION

Now, it's developing. Some undefined logic is there.

=head1 DIFFERENCE OF USAGE

D::M::D::MongoDB asks to you compliant to some limitation.

There are attributable to MongoDB specification.

=head2 PRIMARY KEY

You can not *SET* or *WRITE* or *OVERWRITE* value to 1st primary-field. 
Value in primary-field is set by MongoDB automatically when you set a data into MongoDB.

For example. Following code is not works as expected.

 my $c = MySchema->new;
 my $mongodb = Data::Model::Driver::MongoDB->new( ... );
 $c->set_base_driver( $mongodb );
 my $row = $c->set( people => 'people123456' => { name => 'john', age => 29 } );
 print $row->id; # like '4dc7b39b73f7b47844000005'

It means, primary-field is read-only and auto-identified.

=head2 "where" SECTION OF get() METHOD

Searching with range of values is not works.

For example. Following code is not works as expected.

 my @rows = $c->get( people => { where => [ age => { '>' => 20 } ] } );

=head1 UNSUPPORTED FUNCTIONS

=over 

=item get_multi

=item delete_multi

=item set_multi

=item replace

=back

=head1 AUTHOR

ytnobody E<lt>ytnobody@gmail.comE<gt>

=head1 SEE ALSO

=head1 LICENSE

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
